@inject IBoardService BoardService

<div style="width:50em">
<div class="border p-3" style="width:90%">
<EditForm Model="newBoard" OnValidSubmit="CreateBoard">
    <DataAnnotationsValidator></DataAnnotationsValidator>
        <div class="form-group" style="margin:5px">
        <div style="display:flex; justify-content:center"><label for="name" class="required" >Board Name</label></div>
        <InputText id="name" @bind-Value="newBoard.Name" class="form-control"></InputText>
        <ValidationMessage For="@(() => newBoard.Name)" />
    </div>
            <div class=form-group style="margin:5px">
        <div style="display:flex; justify-content:center"><label for="name" class="required" style="text-align:center">Board Description</label></div>
        <InputTextArea id="name" @bind-Value="newBoard.Description" class="form-control" style="height:20em"></InputTextArea>
        <ValidationMessage For="@(() => newBoard.Description)" />
    </div>
    <div style="display:flex; justify-content:center; margin:5px"><button type="submit" class="btn btn-primary">Create</button></div>
</EditForm>
</div>
</div>
@code {
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    Board newBoard = new Board();

    async void CreateBoard()
    {
        await BoardService.AddBoard(newBoard);
        ModalInstance.CloseAsync();
    }
}
