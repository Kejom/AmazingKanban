@page "/boards/{id}"
@inject IBoardService BoardService
@inject IBoardAccessService AccessService
@inject IUserUtility UserUtility
@inject IToastService ToastService
@inject NavigationManager NavigationManager

@attribute [Authorize]
<div class="container p-3">
    @if (Board is not null)
    {
        <div class="row pt-4">
            <div class="col-3">
                <h2 class="text-primary">@Board.Name</h2>
            </div>
            <div class="col-3 text-right">
                <button class="btn btn-primary" style="width:100%"><span class="oi oi-task"></span> Create Task</button>
            </div>
            <div class="col-3 text-right">
                @if(UserRole == BoardRoles.Admin)
                {
                    <button class="btn btn-primary" style="width:100%"><span class="oi oi-pencil"></span> Edit Board</button>
                }                
            </div>
            <div class="col-3 text-right">
                @if(UserRole == BoardRoles.Admin)
                {
                    <button class="btn btn-primary" style="width:100%" @onclick="ShowManageUsersModal"><span class="oi oi-people"></span> Manage Users</button>
                }               
            </div>
        </div>
        <br />

        <br />
        <p>@Id</p>
    }
    else
    {
        <p>Something went wrong! Make sure that board with given Id exists and that you have access to it</p>
    }


</div>
@code {
    [CascadingParameter] public IModalService Modal { get; set; }

    [Parameter] public string? Id { get; set; }

    public Board? Board { get; set; }

    public List<BoardAccess<UserLite>> BoardAccesses { get; set; } = new List<BoardAccess<UserLite>>();

    public BoardRoles UserRole { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id is not null)
        {
            Board = await BoardService.GetBoardById(Int32.Parse(Id));
            BoardAccesses = await AccessService.GetByBoardId(Int32.Parse(Id));
            UserRole = await GetCurrentUserAccess();

            if(UserRole == BoardRoles.NoAccess)
            {
                ToastService.ShowWarning("You dont have access to this board", heading:"No Access");
                NavigationManager.NavigateTo("board");
            }
        }
    }

    void ShowManageUsersModal()
    {
        var parameters = new ModalParameters();
        parameters.Add("BoardId", Int32.Parse(Id!));
        parameters.Add("BoardAccesses", BoardAccesses);

        Modal.Show<ManageUsers>("Manage Users", parameters);
    }

    async Task<BoardRoles> GetCurrentUserAccess()
    {
        var isAdmin = await UserUtility.IsAdmin();

        if (isAdmin)
            return BoardRoles.Admin;

        var userId = await UserUtility.GetCurrentUserId();
        var user = BoardAccesses.FirstOrDefault(u => u.UserId == userId);

        if (user is not null)
            return user.Role;

        return BoardRoles.NoAccess;
    }


}
